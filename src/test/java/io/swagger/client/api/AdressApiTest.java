/*
 * Merci facteur API
 * Merci facteur PRO vous permet d'envoyer des courriers depuis votre applicatif via son API.     Types de courriers disponibles :   - Lettre de une ou plusieurs pages.  - Carte postale avec ou sans enveloppe  - Carte pliée  - Carte géante  - Carte non pliée  - Photos sur papier brillant    Modes d'envois disponibles :   - Envoi normal (lettre verte)  - Lettre suivie  - Recommandé avec avis de réception      Au sujet des webhooks : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md#webhooks)     Librairie PHP et exemples d'intégration : [`https://github.com/MerciFacteur/Merci-facteur-API`](https://github.com/MerciFacteur/Merci-facteur-API)    Infos générales sur l'API : [`https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md`](https://github.com/MerciFacteur/Merci-facteur-API/blob/master/README.md)    Plus d'informations sur [`https://www.merci-facteur.com/pro`](https://www.merci-facteur.com/pro)    N'hésitez pas à nous contacter via [`https://www.merci-facteur.com/pro/contact.php`](https://www.merci-facteur.com/pro/contact.php)
 *
 * OpenAPI spec version: 1.2.7
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.AdressInfosAdress;
import io.swagger.client.model.InlineResponse2002;
import io.swagger.client.model.InlineResponse2004;
import io.swagger.client.model.InlineResponse2005;
import io.swagger.client.model.InlineResponse2006;
import io.swagger.client.model.InlineResponse2007;
import io.swagger.client.model.InlineResponse400;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for AdressApi
 */
@Ignore
public class AdressApiTest {

    private final AdressApi api = new AdressApi();

    /**
     * Supprimer une adresse
     *
     * Supprime une adresse du carnet d&#x27;adresses. Attention, opération irrémédiable.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAdressTest() throws Exception {
        String wwServiceId = null;
        String wwAccessToken = null;
        Integer idAdress = null;
        InlineResponse2002 response = api.deleteAdress(wwServiceId, wwAccessToken, idAdress);

        // TODO: test validations
    }
    /**
     * Obtenir les infos complètes d&#x27;une ou plusieurs adresse(s) à partir de leurs adresse Id (destinataire ou expéditeur).
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAdressInfosTest() throws Exception {
        String wwServiceId = null;
        String wwAccessToken = null;
        List<Integer> idAdress = null;
        InlineResponse2007 response = api.getAdressInfos(wwServiceId, wwAccessToken, idAdress);

        // TODO: test validations
    }
    /**
     * Obtenir la liste des pays valides
     *
     * Vous permet d&#x27;avoir la liste des pays disponibles, avec leur orthographe normalisée.     Au sujet des zones géographiques :   fr &#x3D; France métropolitaine  om1 &#x3D; GUADELOUPE, GUYANE FRANCAISE, MARTINIQUE, MAYOTTE, REUNION, SAINT BARTHELEMY, SAINT MARTIN, ST-PIERRE-MIQUELON  om2 &#x3D; CLIPPERTON, NOUVELLE CALEDONIE, POLYNESIE FRANCAISE, TERRES AUSTRALES FR, WALLIS ET FUTUNA  z1 : UE sauf France  z2 : Reste du monde
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getCountryTest() throws Exception {
        String wwServiceId = null;
        String wwAccessToken = null;
        List<String> zone = null;
        InlineResponse2004 response = api.getCountry(wwServiceId, wwAccessToken, zone);

        // TODO: test validations
    }
    /**
     * Lister les adresses du carnet d&#x27;adresses d&#x27;un utilisateur. Limité à 500 adresses. Pour plus de précision dans la recherche utilisez le paramètre \&quot;search\&quot;.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void listAdressTest() throws Exception {
        String wwServiceId = null;
        String wwAccessToken = null;
        Integer idUser = null;
        String type = null;
        String search = null;
        InlineResponse2006 response = api.listAdress(wwServiceId, wwAccessToken, idUser, type, search);

        // TODO: test validations
    }
    /**
     * Créer une nouvelle adresse dans le carnet d&#x27;adresses (non obligatoire pour l&#x27;envoi d&#x27;un courrier)
     *
     * Cela peut-être une adresse d&#x27;expéditeur ou de destinataire. Les adresses sont liées à un utilisateur précis.  Vous ne pouvez pas créer plusieurs fois la même adresse, mais réutiliser les adresses créées.  Sont obligatoires : (nom et/ou société), (cp), (ville), (pays)  Pays doit être avec une orthographe conforme cf. getCountry()  Si une infos est inutilisée, tout de même l&#x27;envoyer en string vide.  Si vous ne souhaitez pas utiliser de carnet d&#x27;adresses, vous pouvez intégrer directement les adresses dans l&#x27;envoi des courriers, sans avoir recours à cette fonction avant.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setNewAdressTest() throws Exception {
        String wwServiceId = null;
        String wwAccessToken = null;
        Integer idUser = null;
        String type = null;
        AdressInfosAdress adress = null;
        InlineResponse2005 response = api.setNewAdress(wwServiceId, wwAccessToken, idUser, type, adress);

        // TODO: test validations
    }
    /**
     * Modifier une adresse dans le carnet d&#x27;adresses
     *
     * Cela peut-être une adresse d&#x27;expéditeur ou de destinataire. Sont obligatoires : (nom et/ou société), (cp), (ville), (pays) / pays doit être avec une orthographe conforme cf. getCountry() / Si une infos est inutilisée, tout de même l&#x27;envoyer en string vide.
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateAdressTest() throws Exception {
        String wwServiceId = null;
        String wwAccessToken = null;
        Integer idAdress = null;
        AdressInfosAdress adress = null;
        InlineResponse2002 response = api.updateAdress(wwServiceId, wwAccessToken, idAdress, adress);

        // TODO: test validations
    }
}
